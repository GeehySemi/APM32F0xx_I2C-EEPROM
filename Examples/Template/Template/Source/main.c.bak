/*!
 * @file        main.c
 *
 * @brief       Main program body
 *
 * @version     V1.0.1
 *
 * @date        2021-07-01
 *
 * @attention
 *
 *  Copyright (C) 2020-2022 Geehy Semiconductor
 *
 *  You may not use this file except in compliance with the
 *  GEEHY COPYRIGHT NOTICE (GEEHY SOFTWARE PACKAGE LICENSE).
 *
 *  The program is only for reference, which is distributed in the hope
 *  that it will be usefull and instructional for customers to develop
 *  their software. Unless required by applicable law or agreed to in
 *  writing, the program is distributed on an "AS IS" BASIS, WITHOUT
 *  ANY WARRANTY OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the GEEHY SOFTWARE PACKAGE LICENSE for the governing permissions
 *  and limitations under the License.
 */

#include "main.h"
#include "Board.h"
#include "CAN_Geehy.h"
#include "apm32f0xx_rcm.h"
#include "I2C.h"
#include "SPI.h"
 void CAN_Isr(void)
 {
     CAN_Rx_Message RxMessage;

     if(CAN_ReadIntFlag(CAN_INT_F0MP) == SET)
     {
         RxMessage.stanID           = 0x0000;
         RxMessage.extenID          = 0x0000;
         RxMessage.typeID           = CAN_TYPEID_STD;
         RxMessage.dataLengthCode   = 0;
         RxMessage.filterMatchIndex = 0;
         RxMessage.data[0]          = 0x00;
         RxMessage.data[1]          = 0x00;

         CAN_RxMessage(CAN_FIFO_0,&RxMessage);
     }
 }

void Delay(void)
{
    volatile uint32_t delay = 0x7ff3;

    while(delay--);
}

int main(void)
{	
	uint8_t data[8]={0x1,0x2,0x3,0x4,0x05,0x06};
	uint8_t Read_Buff[10]={0};
    RCM_EnableAPB1PeriphClock(RCM_APB1_PERIPH_CAN);
    CAN_Normal();
	I2CInit();
    W25QXX_Init();
	w25qxx_read_id();
    while(1)
    {
	 w25qxx_write_page(0x800,data,8);
     CAN_TX();
     Delay();
     I2C_Write(I2C1,0xA0,0x00,data,8);
     Delay();
	 I2C_Read(I2C1,0xA0,0x0000, Read_Buff,7);
	 Delay();
    }
}
