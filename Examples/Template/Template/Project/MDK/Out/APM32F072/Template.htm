<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Out\APM32F072\Template.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Out\APM32F072\Template.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Sep 19 21:14:38 2022
<BR><P>
<H3>Maximum Stack Usage =        172 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; APM_MINI_COMInit &rArr; USART_Config &rArr; RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[12]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[24]">CEC_CAN_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[f]">DMA1_CH1_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[10]">DMA1_CH2_3_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[11]">DMA1_CH4_5_6_7_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[b]">EINT0_1_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[c]">EINT2_3_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[d]">EINT4_15_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from apm32f0xx_int.o(i.HardFault_Handler) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[1e]">I2C2_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from apm32f0xx_int.o(i.NMI_Handler) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[7]">PVD_VDDIO2_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from apm32f0xx_int.o(i.PendSV_Handler) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[a]">RCM_CRS_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[20]">SPI2_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from apm32f0xx_int.o(i.SVC_Handler) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from apm32f0xx_int.o(i.SysTick_Handler) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_apm32f0xx.o(i.SystemInit) referenced from startup_apm32f072.o(.text)
 <LI><a href="#[19]">TMR14_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[1a]">TMR15_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[1b]">TMR16_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[1c]">TMR17_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[13]">TMR1_BRK_UP_TRG_COM_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[14]">TMR1_CC_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[15]">TMR2_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[16]">TMR3_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[17]">TMR6_DAC_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[18]">TMR7_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[e]">TSC_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[21]">USART1_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[22]">USART2_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[23]">USART3_4_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[25]">USBD_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[6]">WWDT_IRQHandler</a> from startup_apm32f072.o(.text) referenced from startup_apm32f072.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_apm32f072.o(.text)
 <LI><a href="#[29]">fputc</a> from main.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(.text)
</UL>
<P><STRONG><a name="[5b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[31]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[5d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[5e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[5f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[60]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CEC_CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_CH1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_CH2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_CH4_5_6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EINT0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EINT2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EINT4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_VDDIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCM_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TMR14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TMR15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TMR16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TMR17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TMR1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TMR1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TMR6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TMR7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USART3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f072.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadSYSCLKFreq
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_ReadBuffer
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[63]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[64]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[65]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>APM_MINI_COMInit</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, board.o(i.APM_MINI_COMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = APM_MINI_COMInit &rArr; USART_Config &rArr; RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB1PeriphClock
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQRequest
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPinAF
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB2PeriphClock
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAHBPeriphClock
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_EnableInterrupt
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>Delay</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>GPIO_Config</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, apm32f0xx_gpio.o(i.GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_COMInit
</UL>

<P><STRONG><a name="[36]"></a>GPIO_ConfigPinAF</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, apm32f0xx_gpio.o(i.GPIO_ConfigPinAF))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_ConfigPinAF
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_COMInit
</UL>

<P><STRONG><a name="[3d]"></a>GPIO_SetBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32f0xx_gpio.o(i.GPIO_SetBit))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CInit
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f0xx_int.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>I2CInit</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, i2c.o(i.I2CInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = I2CInit &rArr; GPIO_ConfigPinAF
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB1PeriphClock
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Reset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Enable
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Config
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPinAF
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB2PeriphClock
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAHBPeriphClock
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ConfigI2CCLK
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>I2C_BufferWritePage</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, i2c.o(i.I2C_BufferWritePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2C_BufferWritePage &rArr; I2C_HandlingTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TxData
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadStatusFlag
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_HandlingTransfer
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearStatusFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_WriteBuffer
</UL>

<P><STRONG><a name="[46]"></a>I2C_ClearStatusFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32f0xx_i2c.o(i.I2C_ClearStatusFlag))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_WaitEepromStandbyState
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BufferWritePage
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_ReadBuffer
</UL>

<P><STRONG><a name="[40]"></a>I2C_Config</STRONG> (Thumb, 148 bytes, Stack size 12 bytes, apm32f0xx_i2c.o(i.I2C_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CInit
</UL>

<P><STRONG><a name="[41]"></a>I2C_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_i2c.o(i.I2C_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CInit
</UL>

<P><STRONG><a name="[5a]"></a>I2C_EnableGenerateStart</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apm32f0xx_i2c.o(i.I2C_EnableGenerateStart))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_WaitEepromStandbyState
</UL>

<P><STRONG><a name="[43]"></a>I2C_HandlingTransfer</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, apm32f0xx_i2c.o(i.I2C_HandlingTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_HandlingTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_WaitEepromStandbyState
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BufferWritePage
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_ReadBuffer
</UL>

<P><STRONG><a name="[44]"></a>I2C_ReadStatusFlag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, apm32f0xx_i2c.o(i.I2C_ReadStatusFlag))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_WaitEepromStandbyState
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BufferWritePage
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_ReadBuffer
</UL>

<P><STRONG><a name="[3e]"></a>I2C_Reset</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, apm32f0xx_i2c.o(i.I2C_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB1PeriphReset
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_DisableAPB1PeriphReset
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CInit
</UL>

<P><STRONG><a name="[58]"></a>I2C_RxData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apm32f0xx_i2c.o(i.I2C_RxData))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_ReadBuffer
</UL>

<P><STRONG><a name="[45]"></a>I2C_TxData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32f0xx_i2c.o(i.I2C_TxData))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BufferWritePage
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_ReadBuffer
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f0xx_int.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>NVIC_EnableIRQRequest</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, apm32f0xx_misc.o(i.NVIC_EnableIRQRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_EnableIRQRequest &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_COMInit
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f0xx_int.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>RCM_ConfigI2CCLK</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_ConfigI2CCLK))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CInit
</UL>

<P><STRONG><a name="[48]"></a>RCM_DisableAPB1PeriphReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_DisableAPB1PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Reset
</UL>

<P><STRONG><a name="[33]"></a>RCM_EnableAHBPeriphClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_EnableAHBPeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_COMInit
</UL>

<P><STRONG><a name="[35]"></a>RCM_EnableAPB1PeriphClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_EnableAPB1PeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_COMInit
</UL>

<P><STRONG><a name="[47]"></a>RCM_EnableAPB1PeriphReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_EnableAPB1PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Reset
</UL>

<P><STRONG><a name="[34]"></a>RCM_EnableAPB2PeriphClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_EnableAPB2PeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_COMInit
</UL>

<P><STRONG><a name="[4a]"></a>RCM_ReadPCLKFreq</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, apm32f0xx_rcm.o(i.RCM_ReadPCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadSYSCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART2CLKFreq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART1CLKFreq
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[4b]"></a>RCM_ReadSYSCLKFreq</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, apm32f0xx_rcm.o(i.RCM_ReadSYSCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART2CLKFreq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART1CLKFreq
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadPCLKFreq
</UL>

<P><STRONG><a name="[4c]"></a>RCM_ReadUSART1CLKFreq</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, apm32f0xx_rcm.o(i.RCM_ReadUSART1CLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = RCM_ReadUSART1CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadSYSCLKFreq
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadPCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[4d]"></a>RCM_ReadUSART2CLKFreq</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, apm32f0xx_rcm.o(i.RCM_ReadUSART2CLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadSYSCLKFreq
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadPCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f0xx_int.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f0xx_int.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, system_apm32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SystemClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f072.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>USART_Config</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, apm32f0xx_usart.o(i.USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART_Config &rArr; RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART2CLKFreq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART1CLKFreq
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadPCLKFreq
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_COMInit
</UL>

<P><STRONG><a name="[3b]"></a>USART_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_usart.o(i.USART_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_COMInit
</UL>

<P><STRONG><a name="[39]"></a>USART_EnableInterrupt</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, apm32f0xx_usart.o(i.USART_EnableInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_COMInit
</UL>

<P><STRONG><a name="[53]"></a>USART_ReadStatusFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apm32f0xx_usart.o(i.USART_ReadStatusFlag))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[52]"></a>USART_TxData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apm32f0xx_usart.o(i.USART_TxData))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[50]"></a>__0printf$5</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[66]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[56]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[68]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[69]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[29]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TxData
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadStatusFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = main &rArr; APM_MINI_COMInit &rArr; USART_Config &rArr; RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_WriteBuffer
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_ReadBuffer
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CInit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_COMInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[57]"></a>sEE_ReadBuffer</STRONG> (Thumb, 714 bytes, Stack size 48 bytes, i2c.o(i.sEE_ReadBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sEE_ReadBuffer &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TxData
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RxData
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadStatusFlag
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_HandlingTransfer
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearStatusFlag
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>sEE_WaitEepromStandbyState</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, i2c.o(i.sEE_WaitEepromStandbyState))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = sEE_WaitEepromStandbyState &rArr; I2C_HandlingTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadStatusFlag
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_HandlingTransfer
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EnableGenerateStart
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearStatusFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_WriteBuffer
</UL>

<P><STRONG><a name="[55]"></a>sEE_WriteBuffer</STRONG> (Thumb, 464 bytes, Stack size 48 bytes, i2c.o(i.sEE_WriteBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = sEE_WriteBuffer &rArr; I2C_BufferWritePage &rArr; I2C_HandlingTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sEE_WaitEepromStandbyState
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BufferWritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4f]"></a>SystemClock48M</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, system_apm32f0xx.o(i.SystemClock48M))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>

<P><STRONG><a name="[4e]"></a>SystemClockConfig</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_apm32f0xx.o(i.SystemClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock48M
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[49]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, apm32f0xx_misc.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQRequest
</UL>

<P><STRONG><a name="[51]"></a>_printf_core</STRONG> (Thumb, 688 bytes, Stack size 96 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
